(define (accumulate op init sequence)
    (if (null? sequence)
        init
        (op (car sequence)
            (accumulate op init (cdr sequence)))))
(map car (list (list 1 2) (list 3 4) (list 5 6) (list 7 8)))
(define (accumulate_n op init seqs)
    (if (null? (car seqs))
        `()
        (cons (accumulate op init (map car seqs))
              (accumulate_n op init (map cdr seqs)))))
(accumulate_n + 0 (list (list 1 2) (list 3 4) (list 5 6) (list 7 8)))